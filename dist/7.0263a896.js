webpackJsonp([7],{

/***/ 98:
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];
	
	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}
	
		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();
	
		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";
	
		var styles = listToStyles(list);
		addStylesToDom(styles, options);
	
		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}
	
	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}
	
	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}
	
	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}
	
	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}
	
	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}
	
	function addStyle(obj, options) {
		var styleElement, update, remove;
	
		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}
	
		update(obj);
	
		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}
	
	var replaceText = (function () {
		var textStore = [];
	
		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();
	
	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;
	
		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}
	
	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
		var sourceMap = obj.sourceMap;
	
		if (media) {
			styleElement.setAttribute("media", media);
		}
	
		if (sourceMap) {
			// https://developer.chrome.com/devtools/docs/javascript-debugging
			// this makes source maps inside style tags work properly in Chrome
			css += '\n/*# sourceURL=' + sourceMap.sources[0] + ' */';
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}
	
		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}


/***/ },

/***/ 104:
/***/ function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	var __vue_styles__ = {}
	__webpack_require__(105)
	__vue_template__ = __webpack_require__(107)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	var __vue_options__ = typeof module.exports === "function" ? (module.exports.options || (module.exports.options = {})) : module.exports
	if (__vue_template__) {
	__vue_options__.template = __vue_template__
	}
	if (!__vue_options__.computed) __vue_options__.computed = {}
	Object.keys(__vue_styles__).forEach(function (key) {
	var module = __vue_styles__[key]
	__vue_options__.computed[key] = function () { return module }
	})
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  var id = "_v-34d21fb7/example1.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ },

/***/ 105:
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(106);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(98)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../../node_modules/css-loader/index.js?sourceMap!./../../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./example1.vue", function() {
				var newContent = require("!!./../../../../node_modules/css-loader/index.js?sourceMap!./../../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./example1.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },

/***/ 106:
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(40)();
	// imports
	
	
	// module
	exports.push([module.id, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.param{width:80%;margin:0 auto;}\n.questioninfo{color:#259;}\n.w-150{width:150px;}\n.highlight {\n    width: auto;\n    overflow: auto;\n    word-wrap: normal\n}\n.h50{height:50px;}\n.bor-red{border:1px solid red}\n.box{width:100%;border:1px solid red;box-sizing:border-box;margin-bottom:20px;height: 100px}\n.boxitemflex{display: -webkit-box;display: -ms-flexbox;display: flex;height:50px;}\n.boxitembox{display: -webkit-box;display:-ms-flexbox;height:50px;}\n.bgblue{background:blue;margin:0 10px;}\n.bggreen{background:green;margin:0 10px;}\n\n.flexonew{width:50px;}\n.flextwow{width:100px;}\n.flexthreew{width:150px;}\n\n.flexjcstart{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;}\n.flexjcend{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;}\n.flexjccenter{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;}\n.flexjcspacebetween{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;}\n.flexjcspacearound{-ms-flex-pack:distribute;justify-content:space-around;}\n\n\n.flexoneh{width:100px;height:20px;}\n.flextwoh{width:100px;height:30px;}\n.flexthreeh{width:100px;height:50px;}\n\n.flexaistart{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;}\n.flexaiend{-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;}\n.flexaicenter{-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\n.flexaibaseline{-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;}\n.flexaistretch{-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;}\n\n\n\n.boxpacks{-webkit-box-pack:start;-moz-box-pack:start;}\n.boxpacke{-webkit-box-pack:end;-moz-box-pack:end;}\n.boxpackc{-webkit-box-pack:center;-moz-box-pack:center;}\n.boxpackj{-webkit-box-pack:justify;-moz-box-pack:justify;}\n\n.boxaligns{-webkit-box-align:start;-moz-box-align:start;}\n.boxaligne{-webkit-box-align:end;-moz-box-align:end;}\n.boxalignc{-webkit-box-align:center;-moz-box-align:center;}\n.boxalignb{-webkit-box-align:baseline;-moz-box-align:baseline;}\n.boxalignstr{-webkit-box-align:stretch;-moz-box-align:stretch;}\n\n.displaytable{\n    display:table;\n    color:#fff;\n    width:100%;\n    \n}\n.displayrow{\n    display: table-row;\n    table-layout:fixed\n}\n.displaycol{display: table-cell;vertical-align: middle;}\n.displaycol-auto{display: table-cell;table-layout:auto;width:1px;white-space: nowrap;vertical-align: middle;}\n.displaycol-top{vertical-align: top}\n\n\n\n\n", "", {"version":3,"sources":["/./dev/js/views/example/example1.vue?8c643780"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAumBA,OAAA,UAAA,cAAA,CAAA;AACA,cAAA,WAAA,CAAA;AACA,OAAA,YAAA,CAAA;AACA;IACA,YAAA;IACA,eAAA;IACA,iBAAA;CACA;AACA,KAAA,YAAA,CAAA;AACA,SAAA,oBAAA,CAAA;AACA,KAAA,WAAA,qBAAA,sBAAA,mBAAA,aAAA,CAAA;AACA,aAAA,qBAAA,qBAAA,cAAA,YAAA,CAAA;AACA,YAAA,qBAAA,oBAAA,YAAA,CAAA;AACA,QAAA,gBAAA,cAAA,CAAA;AACA,SAAA,iBAAA,cAAA,CAAA;;AAEA,UAAA,WAAA,CAAA;AACA,UAAA,YAAA,CAAA;AACA,YAAA,YAAA,CAAA;;AAEA,aAAA,uBAAA,oBAAA,2BAAA,CAAA;AACA,WAAA,qBAAA,kBAAA,yBAAA,CAAA;AACA,cAAA,wBAAA,qBAAA,uBAAA,CAAA;AACA,oBAAA,yBAAA,sBAAA,8BAAA,CAAA;AACA,mBAAA,yBAAA,6BAAA,CAAA;;;AAGA,UAAA,YAAA,YAAA,CAAA;AACA,UAAA,YAAA,YAAA,CAAA;AACA,YAAA,YAAA,YAAA,CAAA;;AAEA,aAAA,wBAAA,qBAAA,uBAAA,CAAA;AACA,WAAA,sBAAA,mBAAA,qBAAA,CAAA;AACA,cAAA,yBAAA,sBAAA,mBAAA,CAAA;AACA,gBAAA,2BAAA,wBAAA,qBAAA,CAAA;AACA,eAAA,0BAAA,uBAAA,oBAAA,CAAA;;;;AAIA,UAAA,uBAAA,oBAAA,CAAA;AACA,UAAA,qBAAA,kBAAA,CAAA;AACA,UAAA,wBAAA,qBAAA,CAAA;AACA,UAAA,yBAAA,sBAAA,CAAA;;AAEA,WAAA,wBAAA,qBAAA,CAAA;AACA,WAAA,sBAAA,mBAAA,CAAA;AACA,WAAA,yBAAA,sBAAA,CAAA;AACA,WAAA,2BAAA,wBAAA,CAAA;AACA,aAAA,0BAAA,uBAAA,CAAA;;AAEA;IACA,cAAA;IACA,WAAA;IACA,WAAA;;CAEA;AACA;IACA,mBAAA;IACA,kBAAA;CACA;AACA,YAAA,oBAAA,uBAAA,CAAA;AACA,iBAAA,oBAAA,kBAAA,UAAA,oBAAA,uBAAA,CAAA;AACA,gBAAA,mBAAA,CAAA","file":"example1.vue","sourcesContent":["<template>\n<div>\n   <div class=\"param\">\n        <div class=\"questioninfo f15  mb-10\">\n            <p class=\"lh40\">以flex为入口（写出flex的特性，每个特性的dome），引出box 进而关联到pc上display:table </p>\n\n        </div>\n        <div class=\"questioninfo f15  mb-10\">\n            <p class=\"lh40\">问题1:display有哪些属性？</p>\n\n        </div>\n\n        <div class=\"bor-top\">\n            <p class=\"lh30 mt-10\">none | inline | block | list-item | inline-block | table | inline-table | table-caption | table-cell | table-row | table-row-group | table-column | table-column-group | table-footer-group | table-header-group | run-in | box | inline-box | flexbox | inline-flexbox | flex | inline-flex其余可以参考w3c文档</p>\n\n             <p class=\"lh30 mt-20\">下面列几个重要的取值如下:</p>\n             <div class=\"highlight\">\n                <pre>\n    <code class=\"language-css\">\n    <div style=\"border:1px solid red\">\n    <span class=\"nt\">table</span><span class=\"o\">:</span><span class=\"nt\">指定对象作为块元素级的表格。类同于html标签\"table\"（CSS2）</span>\n\n    <span class=\"nt\">inline-table</span><span class=\"o\">:</span><span class=\"nt\">指定对象作为内联元素级的表格。类同于html标签\"table\"（CSS2）</span>\n\n    <span class=\"nt\">table-cell</span><span class=\"o\">:</span><span class=\"nt\">指定对象作为表格单元格。类同于html标签\"td\"（CSS2）</span>\n\n    <span class=\"nt\">table-row</span><span class=\"o\">:</span><span class=\"nt\">指定对象作为表格行。类同于html标签\"tr\"（CSS2）</span>\n    </div>\n    <div style=\"border:1px solid red\">\n    <span class=\"nt\">box</span><span class=\"o\">:</span><span class=\"nt\">将对象作为弹性伸缩盒显示。（伸缩盒最老版本）（CSS3）</span>\n\n    <span class=\"nt\">inline-box</span><span class=\"o\">:</span><span class=\"nt\">将对象作为内联块级弹性伸缩盒显示。（伸缩盒最老版本）（CSS3）</span>\n\n    <span class=\"nt\">flexbox</span><span class=\"o\">:</span><span class=\"nt\">将对象作为弹性伸缩盒显示。（伸缩盒过渡版本）（CSS3）</span>\n\n    <span class=\"nt\">inline-flexbox</span><span class=\"o\">:</span><span class=\"nt\">将对象作为内联块级弹性伸缩盒显示。（伸缩盒过渡版本）（CSS3）</span>\n\n    <span class=\"nt\">flex</span><span class=\"o\">:</span><span class=\"nt\">将对象作为弹性伸缩盒显示。（伸缩盒最新版本）（CSS3）</span>\n\n    <span class=\"nt\">inline-flex</span><span class=\"o\">:</span><span class=\"nt\">将对象作为内联块级弹性伸缩盒显示。（伸缩盒最新版本）（CSS3）</span>  \n    </div>\n    </code>\n                </pre>\n            </div>\n        </div>\n   </div>\n\n\n\n\n\n\n\n\n    <div class=\"param\">\n        <div class=\"questioninfo f15  mb-10\">\n            <p class=\"lh40\">问题2:flex有哪些特性？？</p>\n\n        </div>\n\n        <div class=\"bor-top\">\n            <p class=\"lh30 mt-10\">flex-direction | flex-wrap | flex-flow | justify-content | align-items | align-content</p>\n\n            <p class=\"lh30 mt-20\">下面列几个重要的取值如下:</p>\n            <div class=\"highlight\">\n                <pre>\n    <code class=\"language-css\">\n    <span class=\"nt\">justify-content</span><span class=\"o\">:</span><span class=\"nt\">属性定义了项目在主轴上的对齐方式。</span>\n\n    <span class=\"nt\">align-items</span><span class=\"o\">:</span><span class=\"nt\">属性定义项目在交叉轴上如何对齐。</span>\n    </code>\n                </pre>\n            </div>\n\n\n\n            <p class=\"lh30 mt-20\">2.1 justify-content在主轴上的案例如下:</p>\n            <div class=\"highlight\">\n                <pre>\n                <code class=\"language-css\">justify-content: flex-start | flex-end | center | space-between | space-around;依次展示</code>\n                </pre>\n\n                <div class=\"box\">\n                    <p>左对齐</p>\n                    <div class=\"boxitemflex flexjcstart\" >\n                        <div class=\"bgblue flexonew\"></div>\n                        <div class=\"bgblue flextwow\"></div>\n                        <div class=\"bgblue flexthreew\"></div>\n                    </div>\n                </div>\n\n                <div class=\"box\">\n                    <p>右对齐</p>\n                    <div class=\"boxitemflex flexjcend\" >\n                        <div class=\"bgblue flexonew\"></div>\n                        <div class=\"bgblue flextwow\"></div>\n                        <div class=\"bgblue flexthreew\"></div>\n                    </div>\n                </div>\n\n                <div class=\"box\">\n                    <p>居中对齐</p>\n                    <div class=\"boxitemflex flexjccenter\" >\n                        <div class=\"bgblue flexonew\"></div>\n                        <div class=\"bgblue flextwow\"></div>\n                        <div class=\"bgblue flexthreew\"></div>\n                    </div>\n                </div>\n\n                <div class=\"box\">\n                    <p>两端对齐，间隔相等。</p>\n                    <div class=\"boxitemflex flexjcspacebetween\" >\n                        <div class=\"bgblue flexonew\"></div>\n                        <div class=\"bgblue flextwow\"></div>\n                        <div class=\"bgblue flexthreew\"></div>\n                    </div>\n                </div>\n\n                <div class=\"box\">\n                    <p>每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</p>\n                    <div class=\"boxitemflex flexjcspacearound\" >\n                        <div class=\"bgblue flexonew\"></div>\n                        <div class=\"bgblue flextwow\"></div>\n                        <div class=\"bgblue flexthreew\"></div>\n                    </div>\n                </div>\n            </div>\n\n\n\n\n            <p class=\"lh30 mt-20\">2.2 align-items在交叉轴上的案例如下:</p>\n            <div class=\"highlight\">\n                <pre>\n                <code class=\"language-css\">align-items: flex-start | flex-end | center | baseline | stretch;依次展示</code>\n                </pre>\n\n                <div class=\"box\">\n                    <p>上对齐</p>\n                    <div class=\"boxitemflex flexaistart\" >\n                        <div class=\"bgblue flexoneh\"></div>\n                        <div class=\"bgblue flextwoh\"></div>\n                        <div class=\"bgblue flexthreeh\"></div>\n                    </div>\n                </div>\n\n                <div class=\"box\">\n                    <p>下对齐</p>\n                    <div class=\"boxitemflex flexaiend\" >\n                        <div class=\"bgblue flexoneh\"></div>\n                        <div class=\"bgblue flextwoh\"></div>\n                        <div class=\"bgblue flexthreeh\"></div>\n                    </div>\n                </div>\n\n                <div class=\"box\">\n                    <p>居中对齐</p>\n                    <div class=\"boxitemflex flexaicenter\" >\n                        <div class=\"bgblue flexoneh\"></div>\n                        <div class=\"bgblue flextwoh\"></div>\n                        <div class=\"bgblue flexthreeh\"></div>\n                    </div>\n                </div>\n\n                <div class=\"box\">\n                    <p>项目的第一行文字的基线对齐。</p>\n                    <div class=\"boxitemflex flexaibaseline\" >\n                        <div class=\"bgblue flexoneh f10  cf\">111</div>\n                        <div class=\"bgblue flextwoh f15 cf\">222</div>\n                        <div class=\"bgblue flexthreeh f20 cf\">333</div>\n                    </div>\n                </div>\n\n                <div class=\"box\">\n                    <p>如果项目未设置高度或设为auto，将占满整个容器的高度。</p>\n                    <div class=\"boxitemflex flexaistretch\" >\n                        <div class=\"bgblue flexonew\"></div>\n                        <div class=\"bgblue flextwow\"></div>\n                        <div class=\"bgblue flexthreew\"></div>\n                    </div>\n                </div>\n            </div>\n\n\n\n            <p class=\"lh30 mt-20\">2.3 justify-content | align-items 都介绍完了,元素居中就实现了。案例如下</p>\n            <div class=\"highlight bor-red\">\n                 <div class=\"boxitemflex flexjccenter flexaicenter\" >\n                        <div class=\"bgblue  flexoneh\"></div>\n                        <div class=\"bgblue  flextwoh\"></div>\n                        <div class=\"bgblue  flexthreeh\"></div>\n                 </div>\n            </div>\n                \n        </div>\n   </div>\n\n\n\n\n\n\n\n\n\n\n    <div class=\"param pt-60\">\n        <div class=\"questioninfo f15  mb-10\">\n            <p class=\"lh40\">问题3:即使flex是弹性伸缩盒子，但是手机端还有些不支持，例如国产某某X5内核神器（解决UC浏览器、微信浏览器兼容性问题）？？</p>\n\n        </div>\n        <div class=\"bor-top\">\n            <p class=\"lh30 mt-10\">针对不支持的我们提出老版本和新版本结合的方式。display:box，旧语法篇。\n            <div class=\"bor-red p-10\">\n                <p class=\"lh30 mt-10\"> 前者是flex 2012年的语法，也将是以后标准的语法，大部分浏览器已经实现了无前缀版本。</p>\n                <p class=\"lh30 mt-10\">   后者是box 2009年的语法，已经过时，是需要加上对应前缀的。</p></p>\n            </div>\n\n            <p class=\"lh30 mt-20\">目前没有浏览器支持 box-pack 属性。Firefox 支持替代的 -moz-box-pack 属性。Safari、Opera 以及 Chrome 支持替代的 -webkit-box-pack 属性。下面列几个重要的取值如下:</p>\n            <div class=\"highlight\">\n                <pre>\n    <code class=\"language-css\">\n    <span class=\"nt\">box-pack</span><span class=\"o\">:</span><span class=\"nt\">属性定义了项目在主轴上的对齐方式。</span>\n\n    <span class=\"nt\">box-align</span><span class=\"o\">:</span><span class=\"nt\">属性定义项目在交叉轴上如何对齐。</span>\n    </code>\n                </pre>\n            </div>\n\n            <p class=\"lh30 mt-20\">3.1 box-pack在主轴上的案例如下(以谷歌Chrome为例子):</p>\n            <div class=\"highlight\">\n                <pre>\n                <code class=\"language-css\">box-pack: start | end | center | justify;依次展示</code>\n                </pre>\n\n                <div class=\"box\">\n                    <p>左对齐</p>\n                    <div class=\"boxitembox boxpacks\" >\n                        <div class=\"bgblue flexonew\"></div>\n                        <div class=\"bgblue flextwow\"></div>\n                        <div class=\"bgblue flexthreew\"></div>\n                    </div>\n                </div>\n                <div class=\"box\">\n                    <p>右对齐</p>\n                    <div class=\"boxitembox boxpacke\" >\n                        <div class=\"bgblue flexonew\"></div>\n                        <div class=\"bgblue flextwow\"></div>\n                        <div class=\"bgblue flexthreew\"></div>\n                    </div>\n                </div>\n                <div class=\"box\">\n                    <p>剧中对齐</p>\n                    <div class=\"boxitembox boxpackc\" >\n                        <div class=\"bgblue flexonew\"></div>\n                        <div class=\"bgblue flextwow\"></div>\n                        <div class=\"bgblue flexthreew\"></div>\n                    </div>\n                </div>\n                <div class=\"box\">\n                    <p>两端对齐，间隔相等</p>\n                    <div class=\"boxitembox boxpackj\" >\n                        <div class=\"bgblue flexonew\"></div>\n                        <div class=\"bgblue flextwow\"></div>\n                        <div class=\"bgblue flexthreew\"></div>\n                    </div>\n                </div>\n            </div>\n\n\n            <p class=\"lh30 mt-20\">3.2 box-align在交叉轴上的案例如下(以谷歌Chrome为例子):</p>\n            <div class=\"highlight\">\n                <pre>\n                <code class=\"language-css\">box-align: start | end | center | baseline | stretch;依次展示</code>\n                </pre>\n\n                <div class=\"box\">\n                    <p>上对齐</p>\n                    <div class=\"boxitembox boxaligns\" >\n                        <div class=\"bgblue flexoneh\"></div>\n                        <div class=\"bgblue flextwoh\"></div>\n                        <div class=\"bgblue flexthreeh\"></div>\n                    </div>\n                </div>\n                <div class=\"box\">\n                    <p>下对齐</p>\n                    <div class=\"boxitembox boxaligne\" >\n                        <div class=\"bgblue flexoneh\"></div>\n                        <div class=\"bgblue flextwoh\"></div>\n                        <div class=\"bgblue flexthreeh\"></div>\n                    </div>\n                </div>\n                <div class=\"box\">\n                    <p>居中对齐</p>\n                    <div class=\"boxitembox boxalignc\" >\n                        <div class=\"bgblue flexoneh\"></div>\n                        <div class=\"bgblue flextwoh\"></div>\n                        <div class=\"bgblue flexthreeh\"></div>\n                    </div>\n                </div>\n                <div class=\"box\">\n                    <p>项目的第一行文字的基线对齐。</p>\n                    <div class=\"boxitembox boxalignb\" >\n                        <div class=\"bgblue flexoneh f10  cf\">111</div>\n                        <div class=\"bgblue flextwoh f15 cf\">222</div>\n                        <div class=\"bgblue flexthreeh f20 cf\">333</div>\n                    </div>\n                </div>\n                <div class=\"box\">\n                    <p>如果项目未设置高度或设为auto，将占满整个容器的高度。</p>\n                    <div class=\"boxitembox boxalignstr\" >\n                        <div class=\"bgblue flexonew\"></div>\n                        <div class=\"bgblue flextwow\"></div>\n                        <div class=\"bgblue flexthreew\"></div>\n                    </div>\n                </div>\n            </div>\n            \n            <p class=\"lh30 mt-20\">3.3 box-pack | box-align 都介绍完了,元素居中就实现了。(以谷歌Chrome为例子)的案例如下</p>\n            <div class=\"highlight bor-red\">\n                 <div class=\"boxitembox boxpackc boxalignc\" >\n                        <div class=\"bgblue  flexoneh\"></div>\n                        <div class=\"bgblue  flextwoh\"></div>\n                        <div class=\"bgblue  flexthreeh\"></div>\n                 </div>\n            </div>\n\n        </div>\n    </div>\n\n\n\n\n    \n    <div class=\"param pt-60\">\n        <div class=\"questioninfo f15  mb-10\">\n            <p class=\"lh40\">问题4:flex和box都已经介绍完了，那么兼容写法应该怎么写呢？？</p>\n\n        </div>\n        <div class=\"bor-top\">\n            <p class=\"lh30 mt-20\">4.1  首先定义容器的display属性,下面是大致范围，来自\"http://caniuse.com/#search=flex\"摘抄</p>\n\n            <p class=\"lh30 mt-20 bor-red p-10\">\n                    根据CanIUse的数据可以总结如下：\n\n                    IE10部分支持2012，需要-ms-前缀。\n\n                    Android4.1/4.2-4.3部分支持2009 ，需要-webkit-前缀。\n\n                    Safari7/7.1/8部分支持2012， 需要-webkit-前缀。\n\n                    IOS Safari7.0-7.1/8.1-8.3部分支持2012，需要-webkit-前缀。\n\n                    但是box-pack和box-align是不兼容IE的。\n            </p>\n            <div class=\"highlight\">\n                <pre>\n    <code class=\"language-css\">\n    <span class=\"nt\">display</span><span class=\"o\">:</span><span class=\"nt\">box</span> <span class=\"o\">;</span><span class=\"c\">/* Android 4.4- */</span>\n\n    <span class=\"nt\">display</span><span class=\"o\">:</span><span class=\"nt\">-webkit-box</span> <span class=\"o\">;</span><span class=\"c\">/* Chrome 4+, Safari 3.1-6, iOS Safari 3.2+ */</span>\n\n    <span class=\"nt\">display</span><span class=\"o\">:</span><span class=\"nt\">-moz-box</span><span class=\"o\">;</span><span class=\"c\">/* Firefox 19- */</span>\n\n    <span class=\"nt\">display</span><span class=\"o\">:</span><span class=\"nt\">-webkit-flex</span><span class=\"o\">;</span><span class=\"c\">/* Chrome 21+, Safari 6.1+, iOS Safari 7+, Opera 15/16 */</span>\n\n    <span class=\"nt\">display</span><span class=\"o\">:</span><span class=\"nt\">-moz-flex</span><span class=\"o\">;</span><span class=\"c\">/* Firefox 18+ */</span>\n\n    <span class=\"nt\">display</span><span class=\"o\">:</span><span class=\"nt\">-ms-flexbox</span><span class=\"o\">;</span><span class=\"c\">/* IE 10 */</span>\n\n    <span class=\"nt\">display</span><span class=\"o\">:</span><span class=\"nt\">flex</span><span class=\"o\">;</span><span class=\"c\">/* Chrome 29+, Firefox 22+, IE 11+, Opera 12.1/17/18, Android 4.4+ */</span>\n    </code>\n                </pre>\n            </div>\n        </div>\n\n        <div class=\"bor-top\">\n            <p class=\"lh30 mt-20\">4.2  其次,子元素主轴对齐方式</p>\n\n            <div class=\"highlight\">\n                <pre>\n    <code class=\"language-css\">\n    <span class=\"nt\">-webkit-box-pack</span><span class=\"o\">:</span><span class=\"nt\">center</span> <span class=\"o\">;</span><span class=\"c\"></span>\n\n    <span class=\"nt\">-webkit-justify-content</span><span class=\"o\">:</span><span class=\"nt\">center</span> <span class=\"o\">;</span><span class=\"c\"></span>\n\n    <span class=\"nt\">-moz-justify-content</span><span class=\"o\">:</span><span class=\"nt\">center</span><span class=\"o\">;</span><span class=\"c\"></span>\n\n    <span class=\"nt\">-ms-justify-content</span><span class=\"o\">:</span><span class=\"nt\">center</span><span class=\"o\">;</span><span class=\"c\"></span>\n\n    <span class=\"nt\">-o-justify-content</span><span class=\"o\">:</span><span class=\"nt\">center</span><span class=\"o\">;</span><span class=\"c\"></span>\n\n    <span class=\"nt\">justify-content</span><span class=\"o\">:</span><span class=\"nt\">center</span><span class=\"o\">;</span><span class=\"c\"></span>\n\n    </code>\n                </pre>\n            </div>\n        </div>\n\n        <div class=\"bor-top\">\n            <p class=\"lh30 mt-20\">4.3  最后,子元素交叉轴对齐方式</p>\n\n            <div class=\"highlight\">\n                <pre>\n    <code class=\"language-css\">\n    <span class=\"nt\">-webkit-box-align</span><span class=\"o\">:</span><span class=\"nt\">center</span> <span class=\"o\">;</span><span class=\"c\"></span>\n\n    <span class=\"nt\">-moz-align-items</span><span class=\"o\">:</span><span class=\"nt\">center</span> <span class=\"o\">;</span><span class=\"c\"></span>\n\n    <span class=\"nt\">-webkit-align-item</span><span class=\"o\">:</span><span class=\"nt\">center</span><span class=\"o\">;</span><span class=\"c\"></span>\n\n    <span class=\"nt\">-ms-align-items</span><span class=\"o\">:</span><span class=\"nt\">center</span><span class=\"o\">;</span><span class=\"c\"></span>\n\n    <span class=\"nt\">-o-align-items</span><span class=\"o\">:</span><span class=\"nt\">center</span><span class=\"o\">;</span><span class=\"c\"></span>\n\n    <span class=\"nt\">align-items</span><span class=\"o\">:</span><span class=\"nt\">center</span><span class=\"o\">;</span><span class=\"c\"></span>\n\n    </code>\n                </pre>\n            </div>\n        </div>\n    </div>\n\n\n\n\n    \n\n     <div class=\"param pt-60\">\n        <div class=\"questioninfo f15  mb-10\">\n            <p class=\"lh40\">问题5:flex布局和table布局这两个都能实现剧中效果，那么有什么区别呢？？</p>\n\n        </div>\n         <div class=\"bor-top\">\n            <p class=\"lh30 mt-10\">5.1 刚在讲过的flex布局中flex兼容IE11以上，IE10 加前缀-ms,box兼容IE10,加前缀-ms,不过没有关系我们有table一样可以实现剧中的效果(IE8以上，已经写过案例证明过了)</p>\n\n            <p class=\"lh30 mt-20\">下面列几个重要的取值如下:</p>\n            <div class=\"highlight\">\n                <pre>\n    <code class=\"language-css\">\n    <span class=\"nt\">table</span><span class=\"o\">:</span><span class=\"nt\">指定对象作为块元素级的表格。类同于html标签\"table\"（CSS2）</span>\n\n    <span class=\"nt\">inline-table</span><span class=\"o\">:</span><span class=\"nt\">指定对象作为内联元素级的表格。类同于html标签\"table\"（CSS2）</span>\n\n    <span class=\"nt\">table-cell</span><span class=\"o\">:</span><span class=\"nt\">指定对象作为表格单元格。类同于html标签\"td\"（CSS2）</span>\n\n    <span class=\"nt\">table-row</span><span class=\"o\">:</span><span class=\"nt\">指定对象作为表格行。类同于html标签\"tr\"（CSS2）</span>\n    </code>\n                </pre>\n            </div>\n        </div>\n\n\n        <p class=\"lh30 mt-20\">5.2 用table-row和table-cell实现flex的1:1布局如下:</p>\n        <div class=\"displaytable bor-red\">\n            <div class=\"displayrow\">\n                <div class=\"displaycol bgblue\">\n                    单元格1\n                </div>\n                <div class=\"displaycol bggreen\">\n                    单元格2\n                </div>\n            </div>\n            \n        </div>\n\n        <pre>\n            <code class=\"html\">\n    <div class=\"displaytable bor-red\">\n        <div class=\"displayrow\">\n            <div class=\"displaycol bgblue\">\n                单元格1\n            </div>\n            <div class=\"displaycol bgblue\">\n                单元格2\n            </div>\n        </div>\n    </div>\n            </code>\n        </pre>\n\n\n\n        <p class=\"lh30 mt-20\">5.3 用table-row和table-cell和vertical-align实现居中布局和1：1如下:</p>\n        <div class=\"displaytable bor-red mb-20\">\n            <div class=\"displayrow\">\n                <div class=\"displaycol bgblue h50\">\n                    单元格1(1:1)\n                </div>\n                <div class=\"displaycol bggreen h50\">\n                    单元格2(1:1)\n                </div>\n               \n            </div>\n        </div>\n        <pre>\n            <code class=\"html\">\n        <div class=\"displaytable bor-red mb-20\">\n            <div class=\"displayrow\">\n                <div class=\"displaycol bgblue h50\">\n                    单元格1(1:1)\n                </div>\n                <div class=\"displaycol bggreen h50\">\n                    单元格2(1:1)\n                </div>\n               \n            </div>\n        </div>\n            </code>\n            \n        </pre>\n\n\n        <p class=\"lh30 mt-20\">5.4 用table-row和table-cell和vertical-align实现居中布局和固定宽度如下:</p>\n        <div class=\"displaytable bor-red mb-20\">\n            <div class=\"displayrow\">\n                <div class=\"displaycol w-150 bgblue h50\">\n                    单元格1(固定宽度)\n                </div>\n                <div class=\"displaycol bggreen h50\">\n                    单元格2\n                </div>\n            </div>\n        </div>\n        <pre>\n            <code class=\"html\">\n        <div class=\"displaytable bor-red mb-20\">\n            <div class=\"displayrow\">\n                <div class=\"displaycol w-150 bgblue h50\">\n                    单元格1(固定宽度)\n                </div>\n                <div class=\"displaycol bggreen h50\">\n                    单元格2\n                </div>\n            </div>\n        </div>\n            </code>\n        </pre>\n\n\n\n\n        <p class=\"lh30 mt-20\">5.5 用table-row和table-cell和vertical-align实现居中布局和没有宽度如下:</p>\n        <div class=\"displaytable bor-red\">\n            <div class=\"displayrow\">\n                <div class=\"displaycol-auto  bgblue h50\">\n                    单元格1(没有宽度)\n                </div>\n                <div class=\"displaycol bggreen h50\">\n                    单元格2\n                </div>\n            </div>\n        </div>\n        <pre>\n            <code class=\"html\">\n        <div class=\"displaytable bor-red\">\n            <div class=\"displayrow\">\n                <div class=\"displaycol-auto  bgblue h50\">\n                    单元格1(没有宽度)\n                </div>\n                <div class=\"displaycol bggreen h50\">\n                    单元格2\n                </div>\n            </div>\n        </div>\n            </code>\n        </pre>\n\n\n\n        <pre>\n            <code class=\"css\">\n        .displayrow{\n            display: table-row;\n            table-layout:fixed\n        }\n        .displaycol{\n            display: table-cell;\n            vertical-align: middle;\n        }\n        .displaycol-auto{\n            display: table-cell;\n            table-layout:auto;\n            width:1px;\n            white-space: nowrap;\n            vertical-align: middle;\n        }\n        .displaycol-top{vertical-align: top}\n            </code>\n        </pre>\n\n\n\n\n\n    </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n</div>\n\n\n</template>\n<style>\n\n.param{width:80%;margin:0 auto;}\n.questioninfo{color:#259;}\n.w-150{width:150px;}\n.highlight {\n    width: auto;\n    overflow: auto;\n    word-wrap: normal\n}\n.h50{height:50px;}\n.bor-red{border:1px solid red}\n.box{width:100%;border:1px solid red;box-sizing:border-box;margin-bottom:20px;height: 100px}\n.boxitemflex{display: flex;height:50px;}\n.boxitembox{display: -webkit-box;display: -moz-box;display:-ms-flexbox;height:50px;}\n.bgblue{background:blue;margin:0 10px;}\n.bggreen{background:green;margin:0 10px;}\n\n.flexonew{width:50px;}\n.flextwow{width:100px;}\n.flexthreew{width:150px;}\n\n.flexjcstart{justify-content:flex-start;}\n.flexjcend{justify-content:flex-end;}\n.flexjccenter{justify-content:center;}\n.flexjcspacebetween{justify-content:space-between;}\n.flexjcspacearound{justify-content:space-around;}\n\n\n.flexoneh{width:100px;height:20px;}\n.flextwoh{width:100px;height:30px;}\n.flexthreeh{width:100px;height:50px;}\n\n.flexaistart{align-items:flex-start;}\n.flexaiend{align-items:flex-end;}\n.flexaicenter{align-items:center;}\n.flexaibaseline{align-items:baseline;}\n.flexaistretch{align-items:stretch;}\n\n\n\n.boxpacks{-webkit-box-pack:start;-moz-box-pack:start;}\n.boxpacke{-webkit-box-pack:end;-moz-box-pack:end;}\n.boxpackc{-webkit-box-pack:center;-moz-box-pack:center;}\n.boxpackj{-webkit-box-pack:justify;-moz-box-pack:justify;}\n\n.boxaligns{-webkit-box-align:start;-moz-box-align:start;}\n.boxaligne{-webkit-box-align:end;-moz-box-align:end;}\n.boxalignc{-webkit-box-align:center;-moz-box-align:center;}\n.boxalignb{-webkit-box-align:baseline;-moz-box-align:baseline;}\n.boxalignstr{-webkit-box-align:stretch;-moz-box-align:stretch;}\n\n.displaytable{\n    display:table;\n    color:#fff;\n    width:100%;\n    \n}\n.displayrow{\n    display: table-row;\n    table-layout:fixed\n}\n.displaycol{display: table-cell;vertical-align: middle;}\n.displaycol-auto{display: table-cell;table-layout:auto;width:1px;white-space: nowrap;vertical-align: middle;}\n.displaycol-top{vertical-align: top}\n\n\n\n\n</style>"],"sourceRoot":"webpack://"}]);
	
	// exports


/***/ },

/***/ 107:
/***/ function(module, exports) {

	module.exports = "\n<div>\n   <div class=\"param\">\n        <div class=\"questioninfo f15  mb-10\">\n            <p class=\"lh40\">以flex为入口（写出flex的特性，每个特性的dome），引出box 进而关联到pc上display:table </p>\n\n        </div>\n        <div class=\"questioninfo f15  mb-10\">\n            <p class=\"lh40\">问题1:display有哪些属性？</p>\n\n        </div>\n\n        <div class=\"bor-top\">\n            <p class=\"lh30 mt-10\">none | inline | block | list-item | inline-block | table | inline-table | table-caption | table-cell | table-row | table-row-group | table-column | table-column-group | table-footer-group | table-header-group | run-in | box | inline-box | flexbox | inline-flexbox | flex | inline-flex其余可以参考w3c文档</p>\n\n             <p class=\"lh30 mt-20\">下面列几个重要的取值如下:</p>\n             <div class=\"highlight\">\n                <pre>\n    <code class=\"language-css\">\n    <div style=\"border:1px solid red\">\n    <span class=\"nt\">table</span><span class=\"o\">:</span><span class=\"nt\">指定对象作为块元素级的表格。类同于html标签\"table\"（CSS2）</span>\n\n    <span class=\"nt\">inline-table</span><span class=\"o\">:</span><span class=\"nt\">指定对象作为内联元素级的表格。类同于html标签\"table\"（CSS2）</span>\n\n    <span class=\"nt\">table-cell</span><span class=\"o\">:</span><span class=\"nt\">指定对象作为表格单元格。类同于html标签\"td\"（CSS2）</span>\n\n    <span class=\"nt\">table-row</span><span class=\"o\">:</span><span class=\"nt\">指定对象作为表格行。类同于html标签\"tr\"（CSS2）</span>\n    </div>\n    <div style=\"border:1px solid red\">\n    <span class=\"nt\">box</span><span class=\"o\">:</span><span class=\"nt\">将对象作为弹性伸缩盒显示。（伸缩盒最老版本）（CSS3）</span>\n\n    <span class=\"nt\">inline-box</span><span class=\"o\">:</span><span class=\"nt\">将对象作为内联块级弹性伸缩盒显示。（伸缩盒最老版本）（CSS3）</span>\n\n    <span class=\"nt\">flexbox</span><span class=\"o\">:</span><span class=\"nt\">将对象作为弹性伸缩盒显示。（伸缩盒过渡版本）（CSS3）</span>\n\n    <span class=\"nt\">inline-flexbox</span><span class=\"o\">:</span><span class=\"nt\">将对象作为内联块级弹性伸缩盒显示。（伸缩盒过渡版本）（CSS3）</span>\n\n    <span class=\"nt\">flex</span><span class=\"o\">:</span><span class=\"nt\">将对象作为弹性伸缩盒显示。（伸缩盒最新版本）（CSS3）</span>\n\n    <span class=\"nt\">inline-flex</span><span class=\"o\">:</span><span class=\"nt\">将对象作为内联块级弹性伸缩盒显示。（伸缩盒最新版本）（CSS3）</span>  \n    </div>\n    </code>\n                </pre>\n            </div>\n        </div>\n   </div>\n\n\n\n\n\n\n\n\n    <div class=\"param\">\n        <div class=\"questioninfo f15  mb-10\">\n            <p class=\"lh40\">问题2:flex有哪些特性？？</p>\n\n        </div>\n\n        <div class=\"bor-top\">\n            <p class=\"lh30 mt-10\">flex-direction | flex-wrap | flex-flow | justify-content | align-items | align-content</p>\n\n            <p class=\"lh30 mt-20\">下面列几个重要的取值如下:</p>\n            <div class=\"highlight\">\n                <pre>\n    <code class=\"language-css\">\n    <span class=\"nt\">justify-content</span><span class=\"o\">:</span><span class=\"nt\">属性定义了项目在主轴上的对齐方式。</span>\n\n    <span class=\"nt\">align-items</span><span class=\"o\">:</span><span class=\"nt\">属性定义项目在交叉轴上如何对齐。</span>\n    </code>\n                </pre>\n            </div>\n\n\n\n            <p class=\"lh30 mt-20\">2.1 justify-content在主轴上的案例如下:</p>\n            <div class=\"highlight\">\n                <pre>\n                <code class=\"language-css\">justify-content: flex-start | flex-end | center | space-between | space-around;依次展示</code>\n                </pre>\n\n                <div class=\"box\">\n                    <p>左对齐</p>\n                    <div class=\"boxitemflex flexjcstart\" >\n                        <div class=\"bgblue flexonew\"></div>\n                        <div class=\"bgblue flextwow\"></div>\n                        <div class=\"bgblue flexthreew\"></div>\n                    </div>\n                </div>\n\n                <div class=\"box\">\n                    <p>右对齐</p>\n                    <div class=\"boxitemflex flexjcend\" >\n                        <div class=\"bgblue flexonew\"></div>\n                        <div class=\"bgblue flextwow\"></div>\n                        <div class=\"bgblue flexthreew\"></div>\n                    </div>\n                </div>\n\n                <div class=\"box\">\n                    <p>居中对齐</p>\n                    <div class=\"boxitemflex flexjccenter\" >\n                        <div class=\"bgblue flexonew\"></div>\n                        <div class=\"bgblue flextwow\"></div>\n                        <div class=\"bgblue flexthreew\"></div>\n                    </div>\n                </div>\n\n                <div class=\"box\">\n                    <p>两端对齐，间隔相等。</p>\n                    <div class=\"boxitemflex flexjcspacebetween\" >\n                        <div class=\"bgblue flexonew\"></div>\n                        <div class=\"bgblue flextwow\"></div>\n                        <div class=\"bgblue flexthreew\"></div>\n                    </div>\n                </div>\n\n                <div class=\"box\">\n                    <p>每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</p>\n                    <div class=\"boxitemflex flexjcspacearound\" >\n                        <div class=\"bgblue flexonew\"></div>\n                        <div class=\"bgblue flextwow\"></div>\n                        <div class=\"bgblue flexthreew\"></div>\n                    </div>\n                </div>\n            </div>\n\n\n\n\n            <p class=\"lh30 mt-20\">2.2 align-items在交叉轴上的案例如下:</p>\n            <div class=\"highlight\">\n                <pre>\n                <code class=\"language-css\">align-items: flex-start | flex-end | center | baseline | stretch;依次展示</code>\n                </pre>\n\n                <div class=\"box\">\n                    <p>上对齐</p>\n                    <div class=\"boxitemflex flexaistart\" >\n                        <div class=\"bgblue flexoneh\"></div>\n                        <div class=\"bgblue flextwoh\"></div>\n                        <div class=\"bgblue flexthreeh\"></div>\n                    </div>\n                </div>\n\n                <div class=\"box\">\n                    <p>下对齐</p>\n                    <div class=\"boxitemflex flexaiend\" >\n                        <div class=\"bgblue flexoneh\"></div>\n                        <div class=\"bgblue flextwoh\"></div>\n                        <div class=\"bgblue flexthreeh\"></div>\n                    </div>\n                </div>\n\n                <div class=\"box\">\n                    <p>居中对齐</p>\n                    <div class=\"boxitemflex flexaicenter\" >\n                        <div class=\"bgblue flexoneh\"></div>\n                        <div class=\"bgblue flextwoh\"></div>\n                        <div class=\"bgblue flexthreeh\"></div>\n                    </div>\n                </div>\n\n                <div class=\"box\">\n                    <p>项目的第一行文字的基线对齐。</p>\n                    <div class=\"boxitemflex flexaibaseline\" >\n                        <div class=\"bgblue flexoneh f10  cf\">111</div>\n                        <div class=\"bgblue flextwoh f15 cf\">222</div>\n                        <div class=\"bgblue flexthreeh f20 cf\">333</div>\n                    </div>\n                </div>\n\n                <div class=\"box\">\n                    <p>如果项目未设置高度或设为auto，将占满整个容器的高度。</p>\n                    <div class=\"boxitemflex flexaistretch\" >\n                        <div class=\"bgblue flexonew\"></div>\n                        <div class=\"bgblue flextwow\"></div>\n                        <div class=\"bgblue flexthreew\"></div>\n                    </div>\n                </div>\n            </div>\n\n\n\n            <p class=\"lh30 mt-20\">2.3 justify-content | align-items 都介绍完了,元素居中就实现了。案例如下</p>\n            <div class=\"highlight bor-red\">\n                 <div class=\"boxitemflex flexjccenter flexaicenter\" >\n                        <div class=\"bgblue  flexoneh\"></div>\n                        <div class=\"bgblue  flextwoh\"></div>\n                        <div class=\"bgblue  flexthreeh\"></div>\n                 </div>\n            </div>\n                \n        </div>\n   </div>\n\n\n\n\n\n\n\n\n\n\n    <div class=\"param pt-60\">\n        <div class=\"questioninfo f15  mb-10\">\n            <p class=\"lh40\">问题3:即使flex是弹性伸缩盒子，但是手机端还有些不支持，例如国产某某X5内核神器（解决UC浏览器、微信浏览器兼容性问题）？？</p>\n\n        </div>\n        <div class=\"bor-top\">\n            <p class=\"lh30 mt-10\">针对不支持的我们提出老版本和新版本结合的方式。display:box，旧语法篇。\n            <div class=\"bor-red p-10\">\n                <p class=\"lh30 mt-10\"> 前者是flex 2012年的语法，也将是以后标准的语法，大部分浏览器已经实现了无前缀版本。</p>\n                <p class=\"lh30 mt-10\">   后者是box 2009年的语法，已经过时，是需要加上对应前缀的。</p></p>\n            </div>\n\n            <p class=\"lh30 mt-20\">目前没有浏览器支持 box-pack 属性。Firefox 支持替代的 -moz-box-pack 属性。Safari、Opera 以及 Chrome 支持替代的 -webkit-box-pack 属性。下面列几个重要的取值如下:</p>\n            <div class=\"highlight\">\n                <pre>\n    <code class=\"language-css\">\n    <span class=\"nt\">box-pack</span><span class=\"o\">:</span><span class=\"nt\">属性定义了项目在主轴上的对齐方式。</span>\n\n    <span class=\"nt\">box-align</span><span class=\"o\">:</span><span class=\"nt\">属性定义项目在交叉轴上如何对齐。</span>\n    </code>\n                </pre>\n            </div>\n\n            <p class=\"lh30 mt-20\">3.1 box-pack在主轴上的案例如下(以谷歌Chrome为例子):</p>\n            <div class=\"highlight\">\n                <pre>\n                <code class=\"language-css\">box-pack: start | end | center | justify;依次展示</code>\n                </pre>\n\n                <div class=\"box\">\n                    <p>左对齐</p>\n                    <div class=\"boxitembox boxpacks\" >\n                        <div class=\"bgblue flexonew\"></div>\n                        <div class=\"bgblue flextwow\"></div>\n                        <div class=\"bgblue flexthreew\"></div>\n                    </div>\n                </div>\n                <div class=\"box\">\n                    <p>右对齐</p>\n                    <div class=\"boxitembox boxpacke\" >\n                        <div class=\"bgblue flexonew\"></div>\n                        <div class=\"bgblue flextwow\"></div>\n                        <div class=\"bgblue flexthreew\"></div>\n                    </div>\n                </div>\n                <div class=\"box\">\n                    <p>剧中对齐</p>\n                    <div class=\"boxitembox boxpackc\" >\n                        <div class=\"bgblue flexonew\"></div>\n                        <div class=\"bgblue flextwow\"></div>\n                        <div class=\"bgblue flexthreew\"></div>\n                    </div>\n                </div>\n                <div class=\"box\">\n                    <p>两端对齐，间隔相等</p>\n                    <div class=\"boxitembox boxpackj\" >\n                        <div class=\"bgblue flexonew\"></div>\n                        <div class=\"bgblue flextwow\"></div>\n                        <div class=\"bgblue flexthreew\"></div>\n                    </div>\n                </div>\n            </div>\n\n\n            <p class=\"lh30 mt-20\">3.2 box-align在交叉轴上的案例如下(以谷歌Chrome为例子):</p>\n            <div class=\"highlight\">\n                <pre>\n                <code class=\"language-css\">box-align: start | end | center | baseline | stretch;依次展示</code>\n                </pre>\n\n                <div class=\"box\">\n                    <p>上对齐</p>\n                    <div class=\"boxitembox boxaligns\" >\n                        <div class=\"bgblue flexoneh\"></div>\n                        <div class=\"bgblue flextwoh\"></div>\n                        <div class=\"bgblue flexthreeh\"></div>\n                    </div>\n                </div>\n                <div class=\"box\">\n                    <p>下对齐</p>\n                    <div class=\"boxitembox boxaligne\" >\n                        <div class=\"bgblue flexoneh\"></div>\n                        <div class=\"bgblue flextwoh\"></div>\n                        <div class=\"bgblue flexthreeh\"></div>\n                    </div>\n                </div>\n                <div class=\"box\">\n                    <p>居中对齐</p>\n                    <div class=\"boxitembox boxalignc\" >\n                        <div class=\"bgblue flexoneh\"></div>\n                        <div class=\"bgblue flextwoh\"></div>\n                        <div class=\"bgblue flexthreeh\"></div>\n                    </div>\n                </div>\n                <div class=\"box\">\n                    <p>项目的第一行文字的基线对齐。</p>\n                    <div class=\"boxitembox boxalignb\" >\n                        <div class=\"bgblue flexoneh f10  cf\">111</div>\n                        <div class=\"bgblue flextwoh f15 cf\">222</div>\n                        <div class=\"bgblue flexthreeh f20 cf\">333</div>\n                    </div>\n                </div>\n                <div class=\"box\">\n                    <p>如果项目未设置高度或设为auto，将占满整个容器的高度。</p>\n                    <div class=\"boxitembox boxalignstr\" >\n                        <div class=\"bgblue flexonew\"></div>\n                        <div class=\"bgblue flextwow\"></div>\n                        <div class=\"bgblue flexthreew\"></div>\n                    </div>\n                </div>\n            </div>\n            \n            <p class=\"lh30 mt-20\">3.3 box-pack | box-align 都介绍完了,元素居中就实现了。(以谷歌Chrome为例子)的案例如下</p>\n            <div class=\"highlight bor-red\">\n                 <div class=\"boxitembox boxpackc boxalignc\" >\n                        <div class=\"bgblue  flexoneh\"></div>\n                        <div class=\"bgblue  flextwoh\"></div>\n                        <div class=\"bgblue  flexthreeh\"></div>\n                 </div>\n            </div>\n\n        </div>\n    </div>\n\n\n\n\n    \n    <div class=\"param pt-60\">\n        <div class=\"questioninfo f15  mb-10\">\n            <p class=\"lh40\">问题4:flex和box都已经介绍完了，那么兼容写法应该怎么写呢？？</p>\n\n        </div>\n        <div class=\"bor-top\">\n            <p class=\"lh30 mt-20\">4.1  首先定义容器的display属性,下面是大致范围，来自\"http://caniuse.com/#search=flex\"摘抄</p>\n\n            <p class=\"lh30 mt-20 bor-red p-10\">\n                    根据CanIUse的数据可以总结如下：\n\n                    IE10部分支持2012，需要-ms-前缀。\n\n                    Android4.1/4.2-4.3部分支持2009 ，需要-webkit-前缀。\n\n                    Safari7/7.1/8部分支持2012， 需要-webkit-前缀。\n\n                    IOS Safari7.0-7.1/8.1-8.3部分支持2012，需要-webkit-前缀。\n\n                    但是box-pack和box-align是不兼容IE的。\n            </p>\n            <div class=\"highlight\">\n                <pre>\n    <code class=\"language-css\">\n    <span class=\"nt\">display</span><span class=\"o\">:</span><span class=\"nt\">box</span> <span class=\"o\">;</span><span class=\"c\">/* Android 4.4- */</span>\n\n    <span class=\"nt\">display</span><span class=\"o\">:</span><span class=\"nt\">-webkit-box</span> <span class=\"o\">;</span><span class=\"c\">/* Chrome 4+, Safari 3.1-6, iOS Safari 3.2+ */</span>\n\n    <span class=\"nt\">display</span><span class=\"o\">:</span><span class=\"nt\">-moz-box</span><span class=\"o\">;</span><span class=\"c\">/* Firefox 19- */</span>\n\n    <span class=\"nt\">display</span><span class=\"o\">:</span><span class=\"nt\">-webkit-flex</span><span class=\"o\">;</span><span class=\"c\">/* Chrome 21+, Safari 6.1+, iOS Safari 7+, Opera 15/16 */</span>\n\n    <span class=\"nt\">display</span><span class=\"o\">:</span><span class=\"nt\">-moz-flex</span><span class=\"o\">;</span><span class=\"c\">/* Firefox 18+ */</span>\n\n    <span class=\"nt\">display</span><span class=\"o\">:</span><span class=\"nt\">-ms-flexbox</span><span class=\"o\">;</span><span class=\"c\">/* IE 10 */</span>\n\n    <span class=\"nt\">display</span><span class=\"o\">:</span><span class=\"nt\">flex</span><span class=\"o\">;</span><span class=\"c\">/* Chrome 29+, Firefox 22+, IE 11+, Opera 12.1/17/18, Android 4.4+ */</span>\n    </code>\n                </pre>\n            </div>\n        </div>\n\n        <div class=\"bor-top\">\n            <p class=\"lh30 mt-20\">4.2  其次,子元素主轴对齐方式</p>\n\n            <div class=\"highlight\">\n                <pre>\n    <code class=\"language-css\">\n    <span class=\"nt\">-webkit-box-pack</span><span class=\"o\">:</span><span class=\"nt\">center</span> <span class=\"o\">;</span><span class=\"c\"></span>\n\n    <span class=\"nt\">-webkit-justify-content</span><span class=\"o\">:</span><span class=\"nt\">center</span> <span class=\"o\">;</span><span class=\"c\"></span>\n\n    <span class=\"nt\">-moz-justify-content</span><span class=\"o\">:</span><span class=\"nt\">center</span><span class=\"o\">;</span><span class=\"c\"></span>\n\n    <span class=\"nt\">-ms-justify-content</span><span class=\"o\">:</span><span class=\"nt\">center</span><span class=\"o\">;</span><span class=\"c\"></span>\n\n    <span class=\"nt\">-o-justify-content</span><span class=\"o\">:</span><span class=\"nt\">center</span><span class=\"o\">;</span><span class=\"c\"></span>\n\n    <span class=\"nt\">justify-content</span><span class=\"o\">:</span><span class=\"nt\">center</span><span class=\"o\">;</span><span class=\"c\"></span>\n\n    </code>\n                </pre>\n            </div>\n        </div>\n\n        <div class=\"bor-top\">\n            <p class=\"lh30 mt-20\">4.3  最后,子元素交叉轴对齐方式</p>\n\n            <div class=\"highlight\">\n                <pre>\n    <code class=\"language-css\">\n    <span class=\"nt\">-webkit-box-align</span><span class=\"o\">:</span><span class=\"nt\">center</span> <span class=\"o\">;</span><span class=\"c\"></span>\n\n    <span class=\"nt\">-moz-align-items</span><span class=\"o\">:</span><span class=\"nt\">center</span> <span class=\"o\">;</span><span class=\"c\"></span>\n\n    <span class=\"nt\">-webkit-align-item</span><span class=\"o\">:</span><span class=\"nt\">center</span><span class=\"o\">;</span><span class=\"c\"></span>\n\n    <span class=\"nt\">-ms-align-items</span><span class=\"o\">:</span><span class=\"nt\">center</span><span class=\"o\">;</span><span class=\"c\"></span>\n\n    <span class=\"nt\">-o-align-items</span><span class=\"o\">:</span><span class=\"nt\">center</span><span class=\"o\">;</span><span class=\"c\"></span>\n\n    <span class=\"nt\">align-items</span><span class=\"o\">:</span><span class=\"nt\">center</span><span class=\"o\">;</span><span class=\"c\"></span>\n\n    </code>\n                </pre>\n            </div>\n        </div>\n    </div>\n\n\n\n\n    \n\n     <div class=\"param pt-60\">\n        <div class=\"questioninfo f15  mb-10\">\n            <p class=\"lh40\">问题5:flex布局和table布局这两个都能实现剧中效果，那么有什么区别呢？？</p>\n\n        </div>\n         <div class=\"bor-top\">\n            <p class=\"lh30 mt-10\">5.1 刚在讲过的flex布局中flex兼容IE11以上，IE10 加前缀-ms,box兼容IE10,加前缀-ms,不过没有关系我们有table一样可以实现剧中的效果(IE8以上，已经写过案例证明过了)</p>\n\n            <p class=\"lh30 mt-20\">下面列几个重要的取值如下:</p>\n            <div class=\"highlight\">\n                <pre>\n    <code class=\"language-css\">\n    <span class=\"nt\">table</span><span class=\"o\">:</span><span class=\"nt\">指定对象作为块元素级的表格。类同于html标签\"table\"（CSS2）</span>\n\n    <span class=\"nt\">inline-table</span><span class=\"o\">:</span><span class=\"nt\">指定对象作为内联元素级的表格。类同于html标签\"table\"（CSS2）</span>\n\n    <span class=\"nt\">table-cell</span><span class=\"o\">:</span><span class=\"nt\">指定对象作为表格单元格。类同于html标签\"td\"（CSS2）</span>\n\n    <span class=\"nt\">table-row</span><span class=\"o\">:</span><span class=\"nt\">指定对象作为表格行。类同于html标签\"tr\"（CSS2）</span>\n    </code>\n                </pre>\n            </div>\n        </div>\n\n\n        <p class=\"lh30 mt-20\">5.2 用table-row和table-cell实现flex的1:1布局如下:</p>\n        <div class=\"displaytable bor-red\">\n            <div class=\"displayrow\">\n                <div class=\"displaycol bgblue\">\n                    单元格1\n                </div>\n                <div class=\"displaycol bggreen\">\n                    单元格2\n                </div>\n            </div>\n            \n        </div>\n\n        <pre>\n            <code class=\"html\">\n    <div class=\"displaytable bor-red\">\n        <div class=\"displayrow\">\n            <div class=\"displaycol bgblue\">\n                单元格1\n            </div>\n            <div class=\"displaycol bgblue\">\n                单元格2\n            </div>\n        </div>\n    </div>\n            </code>\n        </pre>\n\n\n\n        <p class=\"lh30 mt-20\">5.3 用table-row和table-cell和vertical-align实现居中布局和1：1如下:</p>\n        <div class=\"displaytable bor-red mb-20\">\n            <div class=\"displayrow\">\n                <div class=\"displaycol bgblue h50\">\n                    单元格1(1:1)\n                </div>\n                <div class=\"displaycol bggreen h50\">\n                    单元格2(1:1)\n                </div>\n               \n            </div>\n        </div>\n        <pre>\n            <code class=\"html\">\n        <div class=\"displaytable bor-red mb-20\">\n            <div class=\"displayrow\">\n                <div class=\"displaycol bgblue h50\">\n                    单元格1(1:1)\n                </div>\n                <div class=\"displaycol bggreen h50\">\n                    单元格2(1:1)\n                </div>\n               \n            </div>\n        </div>\n            </code>\n            \n        </pre>\n\n\n        <p class=\"lh30 mt-20\">5.4 用table-row和table-cell和vertical-align实现居中布局和固定宽度如下:</p>\n        <div class=\"displaytable bor-red mb-20\">\n            <div class=\"displayrow\">\n                <div class=\"displaycol w-150 bgblue h50\">\n                    单元格1(固定宽度)\n                </div>\n                <div class=\"displaycol bggreen h50\">\n                    单元格2\n                </div>\n            </div>\n        </div>\n        <pre>\n            <code class=\"html\">\n        <div class=\"displaytable bor-red mb-20\">\n            <div class=\"displayrow\">\n                <div class=\"displaycol w-150 bgblue h50\">\n                    单元格1(固定宽度)\n                </div>\n                <div class=\"displaycol bggreen h50\">\n                    单元格2\n                </div>\n            </div>\n        </div>\n            </code>\n        </pre>\n\n\n\n\n        <p class=\"lh30 mt-20\">5.5 用table-row和table-cell和vertical-align实现居中布局和没有宽度如下:</p>\n        <div class=\"displaytable bor-red\">\n            <div class=\"displayrow\">\n                <div class=\"displaycol-auto  bgblue h50\">\n                    单元格1(没有宽度)\n                </div>\n                <div class=\"displaycol bggreen h50\">\n                    单元格2\n                </div>\n            </div>\n        </div>\n        <pre>\n            <code class=\"html\">\n        <div class=\"displaytable bor-red\">\n            <div class=\"displayrow\">\n                <div class=\"displaycol-auto  bgblue h50\">\n                    单元格1(没有宽度)\n                </div>\n                <div class=\"displaycol bggreen h50\">\n                    单元格2\n                </div>\n            </div>\n        </div>\n            </code>\n        </pre>\n\n\n\n        <pre>\n            <code class=\"css\">\n        .displayrow{\n            display: table-row;\n            table-layout:fixed\n        }\n        .displaycol{\n            display: table-cell;\n            vertical-align: middle;\n        }\n        .displaycol-auto{\n            display: table-cell;\n            table-layout:auto;\n            width:1px;\n            white-space: nowrap;\n            vertical-align: middle;\n        }\n        .displaycol-top{vertical-align: top}\n            </code>\n        </pre>\n\n\n\n\n\n    </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n</div>\n\n\n";

/***/ }

});
//# sourceMappingURL=7.0263a896.js.map